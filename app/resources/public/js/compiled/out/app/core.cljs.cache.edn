;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name app.core, :imports nil, :requires nil, :uses nil, :defs {app-state {:name app.core/app-state, :file "src/app/core.cljs", :line 10, :column 1, :end-line 10, :end-column 19, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 10, :column 10, :end-line 10, :end-column 19}}, wavesurfer {:name app.core/wavesurfer, :file "src/app/core.cljs", :line 12, :column 1, :end-line 12, :end-column 20, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 12, :column 10, :end-line 12, :end-column 20}}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 14, :column 7, :end-line 14, :end-column 19, :arglists (quote ([]))}, :name app.core/on-js-reload, :variadic false, :file "src/app/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, q {:protocol-inline nil, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 20, :column 7, :end-line 20, :end-column 8, :arglists (quote ([selector]))}, :name app.core/q, :variadic false, :file "src/app/core.cljs", :end-column 8, :method-params ([selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selector]))}, stream-url {:protocol-inline nil, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([mp3]))}, :name app.core/stream-url, :variadic false, :file "src/app/core.cljs", :end-column 17, :method-params ([mp3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mp3]))}, get-peaks {:protocol-inline nil, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([mp3]))}, :name app.core/get-peaks, :variadic false, :file "src/app/core.cljs", :end-column 16, :method-params ([mp3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([mp3]))}, backend {:name app.core/backend, :file "src/app/core.cljs", :line 35, :column 1, :end-line 35, :end-column 13, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 35, :column 6, :end-line 35, :end-column 13}}, start {:protocol-inline nil, :meta {:file "/Users/ndrw/d/bndr/app/src/app/core.cljs", :line 39, :column 16, :end-line 39, :end-column 21, :export true, :arglists (quote ([]))}, :name app.core/start, :variadic false, :file "src/app/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:seek}, :order [:seek]}, :doc nil}